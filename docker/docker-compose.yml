version: '3.8'

services:
  # Backend API
  backend:
    build:
      context: ..
      dockerfile: docker/backend.Dockerfile
    volumes:
      - ../backend:/app
      - backend_uploads:/app/uploads
    ports:
      - "8000:8000"
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mentis
      - SECRET_KEY=${SECRET_KEY:-supersecretkey}
      - OPENAI_API_KEY=${OPENAI_API_KEY:-}
    depends_on:
      - db
    command: uvicorn app.main:app --reload --host 0.0.0.0 --port 8000
    networks:
      - mentis-network

  # Frontend
  frontend:
    build:
      context: ..
      dockerfile: docker/frontend.Dockerfile
    volumes:
      - ../frontend:/app
      - /app/node_modules
    ports:
      - "3000:3000"
    environment:
      - VITE_API_URL=http://localhost:8000/api
    depends_on:
      - backend
    command: npm run dev
    networks:
      - mentis-network

  # PostgreSQL Database
  db:
    image: postgres:15
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ../backend/db_schema.sql:/docker-entrypoint-initdb.d/db_schema.sql
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=mentis
    ports:
      - "5432:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5
    networks:
      - mentis-network

  # PGAdmin (optional)
  pgadmin:
    image: dpage/pgadmin4
    environment:
      - PGADMIN_DEFAULT_EMAIL=${PGADMIN_EMAIL:-admin@example.com}
      - PGADMIN_DEFAULT_PASSWORD=${PGADMIN_PASSWORD:-admin}
    ports:
      - "5050:80"
    depends_on:
      - db
    networks:
      - mentis-network

  # Initialize database and seed data (run once)
  init-db:
    build:
      context: ..
      dockerfile: docker/backend.Dockerfile
    environment:
      - DATABASE_URL=postgresql://postgres:postgres@db:5432/mentis
    depends_on:
      db:
        condition: service_healthy
    command: >
      sh -c "python -m app.db_init && python -m app.seed_data"
    networks:
      - mentis-network
    profiles:
      - init

volumes:
  postgres_data:
  backend_uploads:

networks:
  mentis-network: